#include <iostream>  // Для ввода и вывода
#include <sstream>   // Для работы со строками
#include <string>    // Для использования строк

// Функция для получения чисел от 0 до x
std::string listNums(int x) {
    std::ostringstream oss; // Создаем объект для конкатенации строк
    for (int i = 0; i <= x; ++i) { // Цикл от 0 до x
        oss << i << " "; // Добавляем текущее число и пробел
    }
    return oss.str(); 
}

// Функция для получения чисел от x до 0
std::string reverseListNums(int x) {
    std::ostringstream oss; // Создаем объект для конкатенации строк
    for (int i = x; i >= 0; --i) { // Цикл от x до 0
        oss << i << " "; // Добавляем текущее число и пробел
    }
    return oss.str(); 
}

// Функция для получения четных чисел от 0 до x
std::string chet(int x) {
    std::ostringstream oss; // Создаем объект для конкатенации строк
    for (int i = 0; i <= x; i += 2) { // Цикл от 0 до x с шагом 2 (четные числа)
        oss << i << " "; // Добавляем текущее четное число и пробел
    }
    return oss.str(); 
}

// Функция для возведения x в степень y
int pow(int x, int y) {
    int result = 1; // Начальное значение = 1, потому что любое число в степени 0 = 1
    for (int i = 0; i < y; ++i) { // Цикл y раз
        result *= x; // Умножаем результат на x
    }
    return result; 
}

// Функция для вывода левостороннего треугольника из символов '*'
void leftTriangle(int x) {
    for (int i = 1; i <= x; ++i) { // Внешний цикл по строкам
        for (int j = 0; j < i; ++j) { // Внутренний цикл для вывода '*' в текущей строке
            std::cout << '*'; // Выводим символ '*'
        }
        std::cout << std::endl; // Переход к следующей строке
    }
}

// Функция для проверки, является ли введенное число целым положительным
bool isPositiveInteger(const std::string& str) {
    for (char const &c : str) { // Проходим по каждому символу строки
        if (!std::isdigit(c)) return false; // Если символ не цифра, возвращаем false
    }
    return !str.empty(); // Вернуть true, если строка не пустая
}

// Главная функция
int main() {
    int choice, x, y; // Переменные для выбора задачи, x и y
    std::string input; // Переменная для ввода пользователя

    // Основной цикл программы
    while (true) {
        // Меню выбора задачи
        std::cout << "Выберите задачу:\n"
                  << "1. Числа подряд
"
                  << "2. Числа наоборот
"
                  << "3. Четные числа
"
                  << "4. Степень числа
"
                  << "5. Левый треугольник
"
                  << "0. Выход
";
        std::cin >> choice; // Чтение выбора пользователя

        if (choice == 0) break; // Выход из цикла, если выбран 0

        std::cout << "Введите целое положительное число для x: ";
        std::cin >> input; // Чтение числа x

        if (!isPositiveInteger(input)) { // Проверка корректности введенных данных
            std::cout << "Ошибка: Ввод должен быть целым положительным числом.\n";
            continue; // Продолжаем цикл, если ввод неправильный
        }
        
        x = std::stoi(input); // Преобразуем введенные данные в целое число
        
        if (choice == 4) { // Если выбрана задача 4 (возведение в степень)
            std::cout << "Введите целое положительное число для y: ";
            std::cin >> input; // Чтение числа y

            if (!isPositiveInteger(input)) { // Проверка корректности введенных данных для y
                std::cout << "Ошибка: Ввод должен быть целым положительным числом.\n";
                continue; // Продолжаем цикл, если ввод неправильный
            }
            
            y = std::stoi(input); // Преобразуем введенные данные в целое число
            std::cout << pow(x, y) << std::endl; // Вычисляем x в степени y и выводим результат
            continue; // Продолжаем цикл
        }

        // Обработка выбора в меню
        switch (choice) {
            case 1:
                std::cout << listNums(x) << std::endl; // Выводим числа от 0 до x
                break;
            case 2:
                std::cout << reverseListNums(x) << std::endl; // Выводим числа от x до 0
                break;
            case 3:
                std::cout << chet(x) << std::endl; // Выводим четные числа от 0 до x
                break;
            case 5:
                leftTriangle(x); // Выводим левый треугольник из '*'
                break;
            default:
                std::cout << "Ошибка: Неправильный выбор.\n"; // Обработка неправильного выбора
                break;
        }
    }

    return 0; // Завершение программы
}

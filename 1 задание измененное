#include <iostream>
#include <limits> // Для ограничения ввода
#include <cctype> // Для проверки символов (например, isalpha)

double fraction(double x) {
    return x - static_cast<int>(x); // Возвращает дробную часть числа
}

int sumLastNums(int x) {
    int lastDigit = x % 10; // Получаем последнюю цифру числа
    int secondLastDigit = (x / 10) % 10; // Получаем предпоследнюю цифру
    return lastDigit + secondLastDigit; // Возвращаем сумму последних двух цифр
}

bool isPositive(int x) {
    return x > 0; // Проверка, является ли число положительным
}

bool is2Digits(int x) {
    return x >= 10 && x <= 99; // Проверка, является ли число двузначным
}

bool isUpperCase(char x) {
    return x >= 'A' && x <= 'Z'; // Проверка, является ли символ заглавной буквой
}

double inputFraction() { // Функция для ввода дробного числа
    double x;
    while (true) { // Бесконечный цикл для повторной попытки ввода
        std::cout << "Введите число (допустимы только дробные и целые): ";
        std::cin >> x; // Чтение числа
        if (std::cin.fail()) { // Проверка на статус ошибки ввода
            std::cin.clear(); // Сброс флага ошибки
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очистка некорректного ввода
            std::cout << "Ошибка: введите корректное вещественное число." << std::endl; // Сообщение об ошибке
        } else {
            return x; 
        }
    }
}

int inputSumLastNums() { // Функция для ввода целого числа с двумя и более цифрами
    int x;
    while (true) { // Бесконечный цикл для повторной попытки ввода
        std::cout << "Введите целое число (не менее двух цифр): ";
        std::cin >> x; // Чтение числа
        if (std::cin.fail() || (x < 10 && x > -10)) { // Проверка на статус ошибки и двузначность
            std::cin.clear(); // Сброс флага ошибок
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очистка некорректного ввода
            std::cout << "Ошибка: введите целое число с не менее чем двумя цифрами." << std::endl; // Сообщение об ошибке
        } else {
            return x; 
        }
    }
}

int inputIsPositive() { // Функция для ввода целого числа для проверки на положительность
    int x;
    while (true) { // Бесконечный цикл для повторной попытки ввода
        std::cout << "Введите целое число для проверки на положительность: ";
        std::cin >> x; // Чтение числа
        if (std::cin.fail()) { // Проверка на статус ошибки ввода
            std::cin.clear(); // Сброс флага
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очистка некорректного ввода
            std::cout << "Ошибка: введите корректное целое число." << std::endl; // Сообщение об ошибке
        } else {
            return x; 
        }
    }
}

int inputIs2Digits() { // Функция для ввода целого числа для проверки на двузначность
    int x;
    while (true) { // Бесконечный цикл для повторной попытки ввода
        std::cout << "Введите целое число для проверки на двузначность: ";
        std::cin >> x; // Чтение числа
        if (std::cin.fail()) { // Проверка на статус ошибки ввода
            std::cin.clear(); // Сброс флага
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очистка некорректного ввода
            std::cout << "Ошибка: введите корректное целое число." << std::endl; // Сообщение об ошибке
        } else {
            return x; 
        }
    }
}

char inputIsUpperCase() { // Функция для ввода символа для проверки заглавной буквы
    char x;
    while (true) { // Бесконечный цикл для повторной попытки ввода
        std::cout << "Введите символ для проверки на заглавную букву: ";
        std::cin >> x; // Чтение символа
        if (!isalpha(x)) { // Проверка, является ли символ буквой
            std::cout << "Ошибка: введите английскую букву." << std::endl; // Сообщение об ошибке
        } else {
            return x; // Возвращаем корректный символ
        }
    }
}

int main() {
    int choice; // Переменная для хранения выбора пользователя
    std::cout << "Выберите функцию:\n";
    std::cout << "1. Дробная часть
";
    std::cout << "2. Сумма двух последних цифр числа
";
    std::cout << "3. Проверка числа на положительность
";
    std::cout << "4. Проверка на двузначность числа
";
    std::cout << "5. Проверка символа на заглавную букву
";
    std::cout << "Введите номер функции: ";
    std::cin >> choice; // Чтение выбора пользователя

    switch (choice) { // Проверка выбора пользователя
        case 1: { // Если выбрана первая функция
            double x = inputFraction(); // Запрос дробного числа
            std::cout << "Дробная часть: " << fraction(x) << std::endl; // Вывод дробной части
            break;
        }
        case 2: { // Если выбрана вторая функция
            int x = inputSumLastNums(); // Запрос целого числа
            std::cout << "Сумма последних двух цифр: " << sumLastNums(x) << std::endl; // Вывод суммы последних двух цифр
            break;
        }
        case 3: { // Если выбрана третья функция
            int x = inputIsPositive(); // Запрос целого числа
            std::cout << "Положительное число: " << (isPositive(x) ? "true" : "false") << std::endl; // Проверка на положительность и вывод результата
            break;
        }
        case 4: { // Если выбрана четвертая функция
            int x = inputIs2Digits(); // Запрос целого числа
            std::cout << "Двузначное число: " << (is2Digits(x) ? "true" : "false") << std::endl; // Проверка на двузначность и вывод результата
            break;
        }
        case 5: { // Если выбрана пятая функция
            char x = inputIsUpperCase(); // Запрос символа
            std::cout << "Заглавная буква: " << (isUpperCase(x) ? "true" : "false") << std::endl; // Проверка на заглавную букву и вывод результата
            break;
        }
        default: 
            std::cout << "Ошибка: некорректный выбор." << std::endl; // Сообщение об ошибке
            break;
    }
    return 0; 
}
